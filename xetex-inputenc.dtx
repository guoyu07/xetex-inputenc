% \iffalse
%<*internal>
\begingroup
%</internal>
%<*batchfile>
\input docstrip.tex
\keepsilent
\preamble

  ___________________________________
  The xetex-inputenc override package
  (C) 2009  Will Robertson    
  License information appended


\endpreamble
\postamble

Copyright (C) 2009 by Will Robertson <wspr81@gmail.com>

Distributable under the LaTeX Project Public License,
version 1.3c or higher (your choice). The latest version of
this license is at: http://www.latex-project.org/lppl.txt

This work is "maintained" (as per LPPL maintenance status) 
by Will Robertson.

This work consists of the file  xetex-inputenc.dtx
          and the derived files xetex-inputenc.sty,
                                xetex-inputenc.ins, and
                                xetex-inputenc.pdf.

\endpostamble
\askforoverwritefalse
\generate{\file{\jobname.sty}{\from{\jobname.dtx}{package}}}
%</batchfile>
%<batchfile>\endbatchfile
%<*internal>
\generate{\file{\jobname.ins}{\from{\jobname.dtx}{batchfile}}}
\endgroup
%</internal>
%
%<*driver>
\ProvidesFile{xetex-inputenc.dtx}
%</driver>
%<package>\ProvidesPackage{xetex-inputenc}
%<*package>
  [2009/03/09 v0.2 XeTeX-specific inputenc package]
%</package>
%
%<*driver>
\documentclass[12pt]{ltxdoc}
\let\pkg\textsf
\def\XeTeX{\textsc{xetex}}
\def\XeLaTeX{\textsc{xelatex}}
\def\pdfTeX{\textsc{pdftex}}
\def\pdfLaTeX{\textsc{pdflatex}}
\def\LaTeX{\textsc{latex}}
\usepackage{hyperref}
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
% \makeatletter
%
% \GetFileInfo{\jobname.dtx}
% \title{The \textsf{xetex-inputenc} override package}
% \author{Will Robertson}
% \date{\filedate \qquad \fileversion}
% \maketitle
%
% When new users migrate from \pdfLaTeX\ to \XeLaTeX, some are often confused
% by the fact that the \pkg{inputenc} package is no longer needed; it does
% seem somewhat intuitive that the correct incantation should now be
% |\usepackage[utf8]{inputenc}|. Unfortunately, this is not the case due to
% differences between the way the 8-bit \TeX\ and \pdfTeX\ engines parse
% unicode files in comparison to \XeTeX.
%
% It seems useful, then, to provide an `override package' for \pkg{inputenc}
% that interprets the wishes of the user without adding the code to break
% \XeTeX's attempted reading of the input file.
%
% \XeTeX\ supports an exhaustive list of input encodings^^A
% \footnote{Detailed here: \url{http://www.iana.org/assignments/character-sets}}. 
% However, only those encodings explicitly supported by \pkg{inputenc}
% are supported by this package. Adapted from the original documentation:
% \begin{itemize}\parskip=0pt\itemsep=0pt
% \item |ascii|    ASCII encoding for the range 32--127
% \item |latin1|   ISO Latin-1 encoding.
% \item |latin2|   ISO Latin-2 encoding.
% \item |latin3|   ISO Latin-3 encoding.
% \item |latin4|   ISO Latin-4 encoding.
% \item |latin5|   ISO Latin-5 encoding.
% \item |latin9|   ISO Latin-9 encoding.
% \item |latin10|  ISO Latin-10 encoding.
% \item |decmulti| DEC Multinational Character Set encoding.
% \item |cp850|    IBM 850 code page.
% \item |cp852|    IBM 852 code page.
% \item |cp858|    IBM 858 code page (this is 850 with Euro symbol).
% \item |cp437|    IBM 437 code page.
% \item |cp865|    IBM 865 code page.
% \item |applemac| Macintosh encoding.
% \item |cp1250|  Windows 1250 (central and eastern Europe) code page.
% \item |cp1252|  Windows 1252 (Western Europe) code page.
% \item |cp1257|  Windows 1257 (Baltic) code page.
% \item |ansinew| Windows 3.1 ANSI encoding, extension of Latin-1
%                 (synonym for |cp1252|).
% \item |utf8|    Unicode UTF-8 encoding support.
% \end{itemize}
% The following encodings are \emph{not} supported right now:
% \begin{itemize}\parskip=0pt\itemsep=0pt
% \item |cp437de|  IBM 437 code page (German version).
% \item |macce|    Macintosh Central European code page.
% \item |next|    Next encoding.
% \end{itemize}
% Unfortunately I don't believe that |cp437de| is a standard encoding;
% \XeTeX\ therefore cannot support it. I'm also not sure what the standard
% names for the |next| and |macce| encodings are, so they're not supported
% either right now.
%
% If \pkg{xetex-inputenc} does not recognise one of the encoding names above
% it passes the option directly to \XeTeX's input encoding commands. For example,
% |latin8| is not supported by \pkg{inputenc} but  it will be happily accepted
% if you attempt to use it here.
%
% \section{Implementation}
%
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%
% \subsection{Setting the encoding and package options}
%
% \begin{macro}{\xIE@encoding}
% Wrapper to declare the package options conveniently:
%    \begin{macrocode}
\def\xIE@encoding#1#2{%
  \DeclareOption{#1}{%
    \xIE@set{#2}
  }%
}
%    \end{macrocode}
% \end{macro}
% And a catch in case the user tries something new:
%    \begin{macrocode}
\DeclareOption*{%
  \PackageWarning{xetex-inputenc}{%
    Encoding "\CurrentOption" not recognised; attempting to use it anyway
  }%
  \xIE@set{\CurrentOption}%
}
%    \end{macrocode}
%
% \begin{macro}{\xIE@set}
% This is how we set the input encoding in \XeTeX:
%    \begin{macrocode}
\newcommand\xIE@set[1]{%
  \edef\xetex@inputenc{#1}%
  \AtEndOfPackage{%
    \XeTeXinputencoding   "\xetex@inputenc"
    \XeTeXdefaultencoding "\xetex@inputenc"
  }
}
%    \end{macrocode}
% \end{macro}
%
% \subsection{Support encodings}
%
%    \begin{macrocode}
\xIE@encoding{ascii}    {ascii}
\xIE@encoding{latin1}   {latin1}
\xIE@encoding{latin2}   {latin2}
\xIE@encoding{latin3}   {latin3}
\xIE@encoding{latin4}   {latin4}
\xIE@encoding{latin5}   {latin5}
\xIE@encoding{latin9}   {latin9}
\xIE@encoding{latin10}  {latin10}
\xIE@encoding{decmulti} {dec}
\xIE@encoding{cp850}    {cp850}
\xIE@encoding{cp852}    {cp852}
\xIE@encoding{cp858}    {cp858}
\xIE@encoding{cp437}    {cp437}
\xIE@encoding{cp865}    {cp865}
\xIE@encoding{applemac} {mac}
\xIE@encoding{cp1250}   {windows-1250}
\xIE@encoding{cp1252}   {windows-1252}
\xIE@encoding{cp1257}   {windows-1257}
\xIE@encoding{ansinew}  {windows-1252}
\xIE@encoding{utf8}     {utf8}
%    \end{macrocode}
% |utf8| is the default, of course. We could simply do nothing when |utf8| 
% is selected (since that's how \XeTeX\ behaves anyway) but there's no harm
% specifying the encoding explicitly.
%    \begin{macrocode}
\ExecuteOptions{utf8}
\ProcessOptions
%    \end{macrocode}
%
% \subsection{Patching \LaTeX} 
%
% \begin{macro}{\@input}
% Patch \LaTeX's internal file-loading process to switch the encoding
% back to normal for all \XeTeX-written files (which are always in UTF-8).
% |\@input| is the version of |\input| that \LaTeX\ uses load the |.aux|
% file, and so on; hopefully third-party packages that write their own
% auxiliary files use it as well\dots
%
% The purpose for this macro in \LaTeX\ is to load packages without
% adding their names to the |\listfiles| command; it's just a happy
% coincidence that it can be co-opted to support \XeTeX\ input encoding.
%    \begin{macrocode}
\def\@input#1{%
  \IfFileExists{#1}{%
    \XeTeXdefaultencoding "utf8"
    \@@input\@filef@und
    \XeTeXdefaultencoding "\xetex@inputenc"
  }{\typeout{No file #1.}}%
}
%    \end{macrocode}
% \end{macro}
%
% Unfortunately the second time the |.aux| file is read in by \LaTeX\
% it uses the |\input| macro rather than |\@input|. So we need to explicitly
% flag that this file is written in UTF-8 encoding:
%    \begin{macrocode}
\AtBeginDocument{%
  \immediate\write\@auxout{\string\XeTeXinputencoding "utf8"}%
}
%    \end{macrocode}
%
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%
\endinput
 